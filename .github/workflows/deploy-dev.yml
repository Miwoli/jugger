name: Deploy Develop
on:
  push:
    branches:
      - 'develop'
jobs:
  lint:
    needs: setup
    uses: ./.github/workflows/lint.yml

  deploy:
    needs: lint

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list
      
      - name: Install dependencies
        run: npm ci && npm run bootstrap
    
      - name: Build
        run: npm run build
        
      - name: 'Prepare dist'
        run: |
          mkdir ../build
          cp ./packages/cms/dist' ../build/cms
          cp ./packages/frontend/dist' ../build/frontend

      - name: 'Deploy'
        uses: appleboy/scp-action@master
        env:
          HOST: ${{ secrets.ADDRESS }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.KEY }}
        with:
          source: '../build/**'
          target: '/var/www/jugger/${{ DEVELOP_URL }}'

      - name: 'Execute remote'
        uses: appleboy/ssh-action@master
        with:
          HOST: ${{ secrets.ADDRESS }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.KEY }}
          script: ls
          # script: |
          #   cd /var/www/jugger/${{ DEVELOP_URL }}
          #   pm2 restart jugger